/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, EmailLog as PrismaEmailLog } from "@prisma/client";

export class EmailLogServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.EmailLogCountArgs, "select">): Promise<number> {
    return this.prisma.emailLog.count(args);
  }

  async emailLogs<T extends Prisma.EmailLogFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailLogFindManyArgs>
  ): Promise<PrismaEmailLog[]> {
    return this.prisma.emailLog.findMany<Prisma.EmailLogFindManyArgs>(args);
  }
  async emailLog<T extends Prisma.EmailLogFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailLogFindUniqueArgs>
  ): Promise<PrismaEmailLog | null> {
    return this.prisma.emailLog.findUnique(args);
  }
  async createEmailLog<T extends Prisma.EmailLogCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailLogCreateArgs>
  ): Promise<PrismaEmailLog> {
    return this.prisma.emailLog.create<T>(args);
  }
  async updateEmailLog<T extends Prisma.EmailLogUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailLogUpdateArgs>
  ): Promise<PrismaEmailLog> {
    return this.prisma.emailLog.update<T>(args);
  }
  async deleteEmailLog<T extends Prisma.EmailLogDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.EmailLogDeleteArgs>
  ): Promise<PrismaEmailLog> {
    return this.prisma.emailLog.delete(args);
  }
}
